[project]
name = "pip-plugin-example"
dynamic = ["version"]
description = "An example of a pip plugin"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Trail of Bits", email = "opensource@trailofbits.com" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
]
dependencies = []
requires-python = ">=3.8"

[project.entry-points."pip.plugins"]
example-distinspector = "pip_plugin_example"

[project.optional-dependencies]
doc = ["pdoc"]
test = ["pytest", "pytest-cov", "pretend", "coverage[toml]"]
lint = [
    # NOTE: ruff is under active development, so we pin conservatively here
    # and let Dependabot periodically perform this update.
    "ruff ~= 0.6.2",
    "mypy >= 1.0",
    "types-html5lib",
    "types-requests",
    "types-toml",
    "interrogate",
]
dev = ["pip-plugin-example[doc,test,lint]", "twine", "build"]



[project.urls]
Homepage = "https://pypi.org/project/pip-plugin-example"
Documentation = "https://facutuesca.github.io/pip-plugin-example/"
Issues = "https://github.com/facutuesca/pip-plugin-example/issues"
Source = "https://github.com/facutuesca/pip-plugin-example"

[tool.coverage.run]
# don't attempt code coverage for the CLI entrypoints
omit = ["src/pip_plugin_example/_cli.py"]

[tool.mypy]
mypy_path = "src"
packages = "pip_plugin_example"
allow_redefinition = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
sqlite_cache = true
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.ruff]
line-length = 100
include = ["src/**/*.py", "test/**/*.py"]

[tool.ruff.lint]
select = ["ALL"]
# D203 and D213 are incompatible with D211 and D212 respectively.
# COM812 and ISC001 can cause conflicts when using ruff as a formatter.
# See https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules.
ignore = ["D203", "D213", "COM812", "ISC001"]

[tool.ruff.lint.per-file-ignores]

"test/**/*.py" = [
    "D",    # no docstrings in tests
    "S101", # asserts are expected in tests
]
[tool.interrogate]
# don't enforce documentation coverage for packaging, testing, the virtual
# environment, or the CLI (which is documented separately).
exclude = ["env", "test", "src/pip_plugin_example/_cli.py"]
ignore-semiprivate = true
fail-under = 100
